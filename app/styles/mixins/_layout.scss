// Triangle helper mixin
//
// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
// @param {Color} $color [currentcolor] - Triangle color
// @param {Length} $size [1em] - Triangle size
@mixin triangle($direction, $color:currentcolor, $size:1em) {
  @if not index(top right bottom left, $direction) {
    @error 'Direction must be either `top`, `right`, `bottom` or `left`.';
  }
  width:0;
  height:0;
  content:'';
  z-index:2;
  border-#{opposite-direction($direction)}:($size * 1.5) solid $color;
  $perpendicular-borders:$size solid transparent;
  @if $direction == top or $direction == bottom {
    border-right:$perpendicular-borders;
    border-left:$perpendicular-borders;
  }
  @else if $direction == right or $direction == left {
    border-top:$perpendicular-borders;
    border-bottom:$perpendicular-borders;
  }
}

// Extend Boodstrap's grid system with SASS breakpoints
// https://gist.github.com/timknight/03e6335b8816aa534cf7
@mixin breakpoint($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {
    @if $min == xs {
      @media (max-width: 767px) { @content; }       // Mobile Devices
    }
    @else if $min == sm {
      @media (min-width: 768px) { @content; }       // Tablet Devices
    }
    @else if $min == md {
      @media (min-width: 992px) { @content; }       // Desktops
    }
    @else if $min == lg {
      @media (min-width: 1200px) { @content; }      // Widescreen Desktops
    }
    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn 'The breakpoint mixin supports the following attributes: xs, sm, md, lg';
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: 'all' !default;
    @if      $min != 0 and $max != 0 { $query: '(min-width: #{$min}) and (max-width: #{$max})'; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: '(min-width: #{$min})'; } // set just min
    @else if $min == 0 and $max != 0 { $query: '(max-width: #{$max})'; } // set just max
    @media #{$query} { @content; }
  }
}
